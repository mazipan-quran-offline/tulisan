{"version":3,"file":"component---src-templates-blog-index-js-5f0cfd77d482e5a4ebe0.js","mappings":"8LAGA,MAAMA,EAAc,CAClBC,OAAQ,eAGJC,EAAY,CAChBC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,WAAY,UAGRC,EAAW,CACfC,QAAS,YACTC,eAAgB,OAChBC,UAAW,OACXC,aAAc,MACdC,MAAO,UACPC,WAAY,WAGRC,EAAc,CAClBb,OAAQ,UACRO,QAAS,YACTC,eAAgB,OAChBC,UAAW,OACXC,aAAc,OAuChB,MApCmBI,IAAqE,IAApE,SAAEC,EAAQ,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,EAAQ,QAAEC,EAAO,OAAEC,GAAQN,EAChF,OACEO,EAAAA,cAAA,OAAKC,MAAO,IAAKrB,KAAcF,KAC3BoB,GACAE,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIP,EAAUQ,IAAI,OAAOH,MAAOhB,GAAU,MAIjDa,GAAWE,EAAAA,cAAA,YAAM,KAElBA,EAAAA,cAAA,OAAKK,UAAU,YAAYJ,MAAOrB,GAC/B0B,MAAMC,KAAK,CAAEC,OAAQd,IAAY,CAACe,EAAGC,IACpCV,EAAAA,cAACE,EAAAA,KAAI,CACHS,IAAG,qBAAsBD,EAAI,GAC7BP,GAAE,KAAY,IAANO,EAAU,GAAKA,EAAI,GAC3BT,MAAO,IACFT,EACHF,MAAOoB,EAAI,IAAMf,EAAc,UAAY,GAC3CJ,WAAYmB,EAAI,IAAMf,EAAc,UAAY,KAGjDe,EAAI,MAKVX,GAAUC,EAAAA,cAAA,YAAM,MACfD,GACAC,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIN,EAAUO,IAAI,OAAOH,MAAOhB,GAAU,MAI9C,E,UCDV,MArDkBQ,IAAsC,IAArC,KAAEmB,EAAI,SAAEC,EAAQ,YAAEC,GAAarB,EAChD,MAAMsB,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,OAE/B,YAAE1B,EAAW,SAAED,EAAQ,MAAE4B,GAAUR,EACnChB,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBD,EACzBE,EAAWD,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAG4B,WAC3D1B,GAAYF,EAAc,GAAG4B,WAEnC,OACEvB,EAAAA,cAACwB,EAAAA,EAAM,CAACX,SAAUA,EAAUK,MAAOH,GACjCf,EAAAA,cAACyB,EAAAA,EAAQ,CAACP,MAAM,wCACfC,EAAMO,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAMT,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KAEpD,OADAC,QAAQC,MAAM,CAAEnB,cAAac,SAE3B5B,EAAAA,cAAA,WAASW,IAAKiB,EAAKE,OAAOC,MACxB/B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MACEC,MAAO,CACLiC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3BnC,EAAAA,cAACE,EAAAA,KAAI,CAACD,MAAO,CAAEb,UAAU,QAAWe,GAAIyB,EAAKE,OAAOC,MACjDb,IAGLlB,EAAAA,cAAA,aAAQ4B,EAAKC,YAAYO,OAE3BpC,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEqC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,YAI3C,IAIdxC,EAAAA,cAACyC,EAAU,CACT/C,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,QAASA,EACTC,OAAQA,IAEH,C","sources":["webpack://tulisan/./src/components/pagination.js","webpack://tulisan/./src/templates/blog-index.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst marginStyle = {\n  margin: '1em 0 2em 0',\n};\n\nconst flexStyle = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n};\n\nconst navStyle = {\n  padding: '.25em 1em',\n  textDecoration: 'none',\n  boxShadow: 'none',\n  borderRadius: '4px',\n  color: '#ffffff',\n  background: '#007acc',\n};\n\nconst numberStyle = {\n  margin: '0 .25em',\n  padding: '.25em 1em',\n  textDecoration: 'none',\n  boxShadow: 'none',\n  borderRadius: '4px',\n};\n\nconst Pagination = ({ numPages, currentPage, prevPage, nextPage, isFirst, isLast }) => {\n  return (\n    <div style={{ ...flexStyle, ...marginStyle }}>\n      {!isFirst && (\n        <Link to={prevPage} rel=\"prev\" style={navStyle}>\n          &lt;&lt;\n        </Link>\n      )}\n      {isFirst && <span>&nbsp;</span>}\n\n      <div className=\"numbering\" style={flexStyle}>\n        {Array.from({ length: numPages }, (_, i) => (\n          <Link\n            key={`pagination-number${i + 1}`}\n            to={`/${i === 0 ? '' : i + 1}`}\n            style={{\n              ...numberStyle,\n              color: i + 1 === currentPage ? '#ffffff' : '',\n              background: i + 1 === currentPage ? '#007acc' : '',\n            }}\n          >\n            {i + 1}\n          </Link>\n        ))}\n      </div>\n\n      {isLast && <span>&nbsp;</span>}\n      {!isLast && (\n        <Link to={nextPage} rel=\"next\" style={navStyle}>\n          &gt;&gt;\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Pagination;\n","// Gatsby supports TypeScript natively!\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport MetaHead from '../components/MetaHead';\nimport Pagination from '../components/pagination';\nimport { rhythm } from '../utils/typography';\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  const { currentPage, numPages, isDev } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <MetaHead title=\"Semua artikel terkait Baca-Quran.id\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        console.debug({ pageContext, node });\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        );\n      })}\n\n      <Pagination\n        numPages={numPages}\n        currentPage={currentPage}\n        prevPage={prevPage}\n        nextPage={nextPage}\n        isFirst={isFirst}\n        isLast={isLast}\n      />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: {frontmatter: {date: DESC}}, skip: $skip, limit: $limit) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["marginStyle","margin","flexStyle","display","flexWrap","justifyContent","alignItems","navStyle","padding","textDecoration","boxShadow","borderRadius","color","background","numberStyle","_ref","numPages","currentPage","prevPage","nextPage","isFirst","isLast","React","style","Link","to","rel","className","Array","from","length","_","i","key","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","isDev","toString","Layout","MetaHead","map","_ref2","node","frontmatter","fields","slug","console","debug","marginBottom","rhythm","date","dangerouslySetInnerHTML","__html","description","excerpt","Pagination"],"sourceRoot":""}